!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.csdwheels=e():n.csdwheels=e()}(window,function(){return function(n){var e={};function t(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return n[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(a,r,function(e){return n[e]}.bind(null,r));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./src/es6/index.js")}({"./src/es6/calendar/Calendar.js":
/*!**************************************!*\
  !*** ./src/es6/calendar/Calendar.js ***!
  \**************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Calendar = function () {\n  function Calendar() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Calendar);\n\n    this.options = {};\n    Object.assign(this.options, options);\n    this.init(options);\n  }\n\n  _createClass(Calendar, [{\n    key: \'init\',\n    value: function init(options) {\n      console.log(\'这是日历插件！\');\n      // this._doSometing(options.elem);\n    }\n  }]);\n\n  return Calendar;\n}();\n\nexports.default = Calendar;\n\n//# sourceURL=webpack://csdwheels/./src/es6/calendar/Calendar.js?')},"./src/es6/dialog/Dialog.js":
/*!**********************************!*\
  !*** ./src/es6/dialog/Dialog.js ***!
  \**********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Dialog = function () {\n  function Dialog() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Dialog);\n\n    this.options = {};\n    Object.assign(this.options, options);\n    this.init(options);\n  }\n\n  _createClass(Dialog, [{\n    key: \'init\',\n    value: function init(options) {\n      console.log(\'这是弹窗插件！\');\n      // this._doSometing(options.elem);\n    }\n  }]);\n\n  return Dialog;\n}();\n\nexports.default = Dialog;\n\n//# sourceURL=webpack://csdwheels/./src/es6/dialog/Dialog.js?')},"./src/es6/index.js":
/*!**************************!*\
  !*** ./src/es6/index.js ***!
  \**************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.Dialog = exports.Calendar = exports.Pagination = undefined;\n\nvar _pagination = __webpack_require__(/*! ./pagination/pagination */ "./src/es6/pagination/pagination.js");\n\nvar _pagination2 = _interopRequireDefault(_pagination);\n\nvar _Calendar = __webpack_require__(/*! ./calendar/Calendar */ "./src/es6/calendar/Calendar.js");\n\nvar _Calendar2 = _interopRequireDefault(_Calendar);\n\nvar _Dialog = __webpack_require__(/*! ./dialog/Dialog */ "./src/es6/dialog/Dialog.js");\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Pagination = _pagination2.default;\nexports.Calendar = _Calendar2.default;\nexports.Dialog = _Dialog2.default;\n\n//# sourceURL=webpack://csdwheels/./src/es6/index.js?')},"./src/es6/pagination/pagination.js":
/*!******************************************!*\
  !*** ./src/es6/pagination/pagination.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n// 引入样式\n\nvar Pagination = function () {\n  function Pagination(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Pagination);\n\n    // 默认配置\n    this.options = {\n      curr: 1,\n      pageShow: 2,\n      ellipsis: true,\n      hash: false\n    };\n    Object.assign(this.options, options);\n    this.init(selector);\n  }\n\n  // 元素类名\n\n\n  // 跨浏览器事件对象\n\n\n  _createClass(Pagination, [{\n    key: \'$\',\n\n\n    // 模仿jQuery $()\n    value: function $(selector, context) {\n      context = arguments.length > 1 ? context : document;\n      return context ? context.querySelectorAll(selector) : null;\n    }\n  }, {\n    key: \'getPageInfos\',\n    value: function getPageInfos(className, content) {\n      return {\n        id: "page",\n        className: className,\n        content: content\n      };\n    }\n  }, {\n    key: \'changePage\',\n    value: function changePage() {\n      var _this = this;\n\n      var pageElement = this.pageElement;\n      EventUtil.addEvent(pageElement, "click", function (ev) {\n        var e = ev || window.event;\n        var target = e.target || e.srcElement;\n        if (target.nodeName.toLocaleLowerCase() == "a") {\n          if (target.id === "prev") {\n            _this.prevPage();\n          } else if (target.id === "next") {\n            _this.nextPage();\n          } else if (target.id === "first") {\n            _this.firstPage();\n          } else if (target.id === "last") {\n            _this.lastPage();\n          } else if (target.id === "page") {\n            _this.goPage(parseInt(target.innerHTML));\n          } else {\n            return;\n          }\n          _this.renderPages();\n          _this.options.callback && _this.options.callback({\n            curr: _this.pageNumber,\n            limit: _this.options.limit,\n            isFirst: false\n          });\n          _this.pageHash();\n        }\n      });\n    }\n  }, {\n    key: \'pageHash\',\n    value: function pageHash() {\n      if (this.options.hash) {\n        window.location.hash = \'#!\' + this.options.hash + \'=\' + this.pageNumber;\n      }\n    }\n  }, {\n    key: \'renderPages\',\n    value: function renderPages() {\n      this.pageElement.innerHTML = "";\n      if (this.options.ellipsis) {\n        this.pageElement.appendChild(this.renderEllipsis());\n      } else {\n        this.pageElement.appendChild(this.renderNoEllipsis());\n      }\n    }\n  }, {\n    key: \'renderNoEllipsis\',\n    value: function renderNoEllipsis() {\n      var fragment = document.createDocumentFragment();\n      if (this.pageNumber < this.options.pageShow + 1) {\n        fragment.appendChild(this.renderDom(1, this.options.pageShow * 2 + 1));\n      } else if (this.pageNumber > this.pageCount - this.options.pageShow) {\n        fragment.appendChild(this.renderDom(this.pageCount - this.options.pageShow * 2, this.pageCount));\n      } else {\n        fragment.appendChild(this.renderDom(this.pageNumber - this.options.pageShow, this.pageNumber + this.options.pageShow));\n      }\n      if (this.pageNumber > 1) {\n        this.addFragmentBefore(fragment, [Pagination.PageInfos[0], Pagination.PageInfos[1]]);\n      }\n      if (this.pageNumber < this.pageCount) {\n        this.addFragmentAfter(fragment, [Pagination.PageInfos[2], Pagination.PageInfos[3]]);\n      }\n      return fragment;\n    }\n  }, {\n    key: \'renderEllipsis\',\n    value: function renderEllipsis() {\n      var fragment = document.createDocumentFragment();\n      this.addFragmentAfter(fragment, [this.getPageInfos(Pagination.CLASS_NAME.LINK + " current", this.pageNumber)]);\n      for (var i = 1; i <= this.options.pageShow; i++) {\n        if (this.pageNumber - i > 1) {\n          this.addFragmentBefore(fragment, [this.getPageInfos(Pagination.CLASS_NAME.LINK, this.pageNumber - i)]);\n        }\n        if (this.pageNumber + i < this.pageCount) {\n          this.addFragmentAfter(fragment, [this.getPageInfos(Pagination.CLASS_NAME.LINK, this.pageNumber + i)]);\n        }\n      }\n      if (this.pageNumber - (this.options.pageShow + 1) > 1) {\n        this.addFragmentBefore(fragment, [Pagination.PageInfos[4]]);\n      }\n      if (this.pageNumber > 1) {\n        this.addFragmentBefore(fragment, [Pagination.PageInfos[0], Pagination.PageInfos[1], this.getPageInfos(Pagination.CLASS_NAME.LINK, 1)]);\n      }\n      if (this.pageNumber + this.options.pageShow + 1 < this.pageCount) {\n        this.addFragmentAfter(fragment, [Pagination.PageInfos[4]]);\n      }\n      if (this.pageNumber < this.pageCount) {\n        this.addFragmentAfter(fragment, [this.getPageInfos(Pagination.CLASS_NAME.LINK, this.pageCount), Pagination.PageInfos[2], Pagination.PageInfos[3]]);\n      }\n      return fragment;\n    }\n  }, {\n    key: \'addFragmentBefore\',\n    value: function addFragmentBefore(fragment, datas) {\n      fragment.insertBefore(this.createHtml(datas), fragment.firstChild);\n    }\n  }, {\n    key: \'addFragmentAfter\',\n    value: function addFragmentAfter(fragment, datas) {\n      fragment.appendChild(this.createHtml(datas));\n    }\n  }, {\n    key: \'createHtml\',\n    value: function createHtml(elemDatas) {\n      var fragment = document.createDocumentFragment();\n      var liEle = document.createElement("li");\n      var aEle = document.createElement("a");\n      elemDatas.forEach(function (elementData, index) {\n        liEle = liEle.cloneNode(false);\n        aEle = aEle.cloneNode(false);\n        liEle.setAttribute("class", Pagination.CLASS_NAME.ITEM);\n        aEle.setAttribute("href", "javascript:;");\n        aEle.setAttribute("id", elementData.id);\n        if (elementData.id !== \'page\') {\n          aEle.setAttribute("class", Pagination.CLASS_NAME.LINK);\n        } else {\n          aEle.setAttribute("class", elementData.className);\n        }\n        aEle.innerHTML = elementData.content;\n        liEle.appendChild(aEle);\n        fragment.appendChild(liEle);\n      });\n      return fragment;\n    }\n  }, {\n    key: \'renderDom\',\n    value: function renderDom(begin, end) {\n      var fragment = document.createDocumentFragment();\n      var str = "";\n      for (var i = begin; i <= end; i++) {\n        str = this.pageNumber === i ? Pagination.CLASS_NAME.LINK + " current" : Pagination.CLASS_NAME.LINK;\n        this.addFragmentAfter(fragment, [this.getPageInfos(str, i)]);\n      }\n      return fragment;\n    }\n  }, {\n    key: \'prevPage\',\n    value: function prevPage() {\n      this.pageNumber--;\n    }\n  }, {\n    key: \'nextPage\',\n    value: function nextPage() {\n      this.pageNumber++;\n    }\n  }, {\n    key: \'goPage\',\n    value: function goPage(pageNumber) {\n      this.pageNumber = pageNumber;\n    }\n  }, {\n    key: \'firstPage\',\n    value: function firstPage() {\n      this.pageNumber = 1;\n    }\n  }, {\n    key: \'lastPage\',\n    value: function lastPage() {\n      this.pageNumber = this.pageCount;\n    }\n  }, {\n    key: \'init\',\n    value: function init(selector) {\n      // 分页器元素\n      this.pageElement = this.$(selector)[0];\n      // 数据总数\n      this.dataCount = this.options.count;\n      // 当前页码\n      this.pageNumber = this.options.curr;\n      // 总页数\n      this.pageCount = Math.ceil(this.options.count / this.options.limit);\n      // 渲染\n      this.renderPages();\n      // 执行回调函数\n      this.options.callback && this.options.callback({\n        curr: this.pageNumber,\n        limit: this.options.limit,\n        isFirst: true\n      });\n      // 改变页数并触发事件\n      this.changePage();\n    }\n  }]);\n\n  return Pagination;\n}();\n\nPagination.CLASS_NAME = {\n  ITEM: \'pagination-item\',\n  LINK: \'pagination-link\'\n};\nPagination.PageInfos = [{\n  id: "first",\n  content: "首页"\n}, {\n  id: "prev",\n  content: "前一页"\n}, {\n  id: "next",\n  content: "后一页"\n}, {\n  id: "last",\n  content: "尾页"\n}, {\n  id: "",\n  content: "..."\n}];\nPagination.EventUtil = {\n  addEvent: function addEvent(element, type, handler) {\n    // 添加绑定\n    if (element.addEventListener) {\n      // 使用DOM2级方法添加事件\n      element.addEventListener(type, handler, false);\n    } else if (element.attachEvent) {\n      // 使用IE方法添加事件\n      element.attachEvent("on" + type, handler);\n    } else {\n      // 使用DOM0级方法添加事件\n      element["on" + type] = handler;\n    }\n  },\n\n  // 移除事件\n  removeEvent: function removeEvent(element, type, handler) {\n    if (element.removeEventListener) {\n      element.removeEventListener(type, handler, false);\n    } else if (element.datachEvent) {\n      element.detachEvent("on" + type, handler);\n    } else {\n      element["on" + type] = null;\n    }\n  },\n  getEvent: function getEvent(event) {\n    // 返回事件对象引用\n    return event ? event : window.event;\n  },\n\n  // 获取mouseover和mouseout相关元素\n  getRelatedTarget: function getRelatedTarget(event) {\n    if (event.relatedTarget) {\n      return event.relatedTarget;\n    } else if (event.toElement) {\n      // 兼容IE8-\n      return event.toElement;\n    } else if (event.formElement) {\n      return event.formElement;\n    } else {\n      return null;\n    }\n  },\n  getTarget: function getTarget(event) {\n    //返回事件源目标\n    return event.target || event.srcElement;\n  },\n  preventDefault: function preventDefault(event) {\n    //取消默认事件\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n  },\n  stoppropagation: function stoppropagation(event) {\n    //阻止事件流\n    if (event.stoppropagation) {\n      event.stoppropagation();\n    } else {\n      event.canceBubble = false;\n    }\n  },\n\n  // 获取mousedown或mouseup按下或释放的按钮是鼠标中的哪一个\n  getButton: function getButton(event) {\n    if (document.implementation.hasFeature("MouseEvents", "2.0")) {\n      return event.button;\n    } else {\n      //将IE模型下的button属性映射为DOM模型下的button属性\n      switch (event.button) {\n        case 0:\n        case 1:\n        case 3:\n        case 5:\n        case 7:\n          //按下的是鼠标主按钮（一般是左键）\n          return 0;\n        case 2:\n        case 6:\n          //按下的是中间的鼠标按钮\n          return 2;\n        case 4:\n          //鼠标次按钮（一般是右键）\n          return 1;\n      }\n    }\n  },\n\n  //获取表示鼠标滚轮滚动方向的数值\n  getWheelDelta: function getWheelDelta(event) {\n    if (event.wheelDelta) {\n      return event.wheelDelta;\n    } else {\n      return -event.detail * 40;\n    }\n  },\n\n  // 以跨浏览器取得相同的字符编码，需在keypress事件中使用\n  getCharCode: function getCharCode(event) {\n    if (typeof event.charCode == "number") {\n      return event.charCode;\n    } else {\n      return event.keyCode;\n    }\n  }\n};\nexports.default = Pagination;\n\n//# sourceURL=webpack://csdwheels/./src/es6/pagination/pagination.js?')}})});